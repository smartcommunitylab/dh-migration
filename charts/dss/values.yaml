nameOverride: ""
fullnameOverride: ""
namespaceOverride: ""
replicaCount: 1

annotations: {}
  # sidecar.istio.io/inject: "false"

image:
  repository: smartcommunitylab/dss
  # tag: cbb7b4b
  tag: old_dremio_driver
  pullPolicy: Always

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

resources:
  limits:
    cpu: "1000m"
    memory: "2Gi"
  requests:
    cpu: "500m"
    memory: "1Gi"

persistence:
  enabled: true
  accessModes:
    - ReadWriteOnce
  size: "8Gi"
  storageClassName: "standard"

readinessProbe:
  exec:
    command:
      - /bin/bash
      - -c
      - nc -z localhost 9443
  initialDelaySeconds: 60
  periodSeconds: 10

livenessProbe:
  exec:
    command:
      - /bin/bash
      - -c
      - nc -z localhost 9443
  initialDelaySeconds: 60
  periodSeconds: 10

strategy:
  rollingUpdate:
    maxUnavailable: 1
    maxSurge: 1

externalKeystore:
  enabled: false
  existingSecret: "dss-keystore"
  filePath: "/home/wso2carbon/wso2-config-volume/repository/resources/security"
  passwordSecret: "dss-keystore-creds"
  keystorePassKey: "keystore"
  truststorePassKey: "truststore"

externalDatabase:
  enabled: true
  existingSecret: "mysql-secret"
  userKey: "username"
  passwordKey: "password"

aac:
  enabled: false
  existingSecret: "dss-aac-creds"
  consumerKey: "username"
  consumerSecretKey: "password"

admin:
  existingSecret: "dss-creds"
  userKey: "username"
  passwordKey: "password"

env:
  DSS_SERVER_URL: ""
  DSS_REVERSEPROXY: ""
  AAC_HOSTNAME: ""
  AAC_REVERSEPROXY: ""
  MYSQL_HOSTNAME: mysql
  DSS_DRIVER_CLASS_NAME: com.mysql.jdbc.Driver
  DSS_ROLE_CONTEXT: components/dss
  DSS_PORT: "9443"
  DSS_KEYSTORE_FILENAME: "wso2carbon.jks"
  DSS_KEYSTORE_KEYALIAS: "wso2carbon"
  DSS_TRUSTSTORE_FILENAME: "client-truststore.jks"

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  path: ""
  host: ""
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
  extraPaths: []

nodeSelector: {}

tolerations: []

affinity: {}